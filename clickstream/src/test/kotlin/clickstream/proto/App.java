// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: App.proto

package clickstream.proto;

/**
 * <pre>
 * Corresponds to the details for the app used by the user.
 * </pre>
 *
 * Protobuf type {@code clickstream.proto.App}
 */
public  final class App extends
    com.google.protobuf.GeneratedMessageLite<
        App, App.Builder> implements
    // @@protoc_insertion_point(message_implements:clickstream.proto.App)
        AppOrBuilder {
  private App() {
    version_ = "";
    packageName_ = "";
  }
  public static final int VERSION_FIELD_NUMBER = 1;
  private String version_;
  /**
   * <pre>
   * Version of the client app. Use this property to send version with every event.
   * This allows for segmentation based on the app version.
   * Sample values: "1.0.0", "1.0.1".
   * </pre>
   *
   * <code>string version = 1;</code>
   * @return The version.
   */
  @Override
  public String getVersion() {
    return version_;
  }
  /**
   * <pre>
   * Version of the client app. Use this property to send version with every event.
   * This allows for segmentation based on the app version.
   * Sample values: "1.0.0", "1.0.1".
   * </pre>
   *
   * <code>string version = 1;</code>
   * @return The bytes for version.
   */
  @Override
  public com.google.protobuf.ByteString
      getVersionBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(version_);
  }
  /**
   * <pre>
   * Version of the client app. Use this property to send version with every event.
   * This allows for segmentation based on the app version.
   * Sample values: "1.0.0", "1.0.1".
   * </pre>
   *
   * <code>string version = 1;</code>
   * @param value The version to set.
   */
  private void setVersion(
      String value) {
    Class<?> valueClass = value.getClass();
  
    version_ = value;
  }
  /**
   * <pre>
   * Version of the client app. Use this property to send version with every event.
   * This allows for segmentation based on the app version.
   * Sample values: "1.0.0", "1.0.1".
   * </pre>
   *
   * <code>string version = 1;</code>
   */
  private void clearVersion() {
    
    version_ = getDefaultInstance().getVersion();
  }
  /**
   * <pre>
   * Version of the client app. Use this property to send version with every event.
   * This allows for segmentation based on the app version.
   * Sample values: "1.0.0", "1.0.1".
   * </pre>
   *
   * <code>string version = 1;</code>
   * @param value The bytes for version to set.
   */
  private void setVersionBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    version_ = value.toStringUtf8();
    
  }

  public static final int PACKAGE_NAME_FIELD_NUMBER = 2;
  private String packageName_;
  /**
   * <pre>
   * Package name of the client app. Use this property to send package name with every event.
   * Sample values: "com.clickstream.app".
   * </pre>
   *
   * <code>string package_name = 2;</code>
   * @return The packageName.
   */
  @Override
  public String getPackageName() {
    return packageName_;
  }
  /**
   * <pre>
   * Package name of the client app. Use this property to send package name with every event.
   * Sample values: "com.clickstream.app".
   * </pre>
   *
   * <code>string package_name = 2;</code>
   * @return The bytes for packageName.
   */
  @Override
  public com.google.protobuf.ByteString
      getPackageNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(packageName_);
  }
  /**
   * <pre>
   * Package name of the client app. Use this property to send package name with every event.
   * Sample values: "com.clickstream.app".
   * </pre>
   *
   * <code>string package_name = 2;</code>
   * @param value The packageName to set.
   */
  private void setPackageName(
      String value) {
    Class<?> valueClass = value.getClass();
  
    packageName_ = value;
  }
  /**
   * <pre>
   * Package name of the client app. Use this property to send package name with every event.
   * Sample values: "com.clickstream.app".
   * </pre>
   *
   * <code>string package_name = 2;</code>
   */
  private void clearPackageName() {
    
    packageName_ = getDefaultInstance().getPackageName();
  }
  /**
   * <pre>
   * Package name of the client app. Use this property to send package name with every event.
   * Sample values: "com.clickstream.app".
   * </pre>
   *
   * <code>string package_name = 2;</code>
   * @param value The bytes for packageName to set.
   */
  private void setPackageNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    packageName_ = value.toStringUtf8();
    
  }

  public static App parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static App parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static App parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static App parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static App parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static App parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static App parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static App parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static App parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static App parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static App parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static App parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(App prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Corresponds to the details for the app used by the user.
   * </pre>
   *
   * Protobuf type {@code clickstream.proto.App}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        App, Builder> implements
      // @@protoc_insertion_point(builder_implements:clickstream.proto.App)
      AppOrBuilder {
    // Construct using com.clickstream.app.proto.App.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Version of the client app. Use this property to send version with every event.
     * This allows for segmentation based on the app version.
     * Sample values: "1.0.0", "1.0.1".
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return The version.
     */
    @Override
    public String getVersion() {
      return instance.getVersion();
    }
    /**
     * <pre>
     * Version of the client app. Use this property to send version with every event.
     * This allows for segmentation based on the app version.
     * Sample values: "1.0.0", "1.0.1".
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return The bytes for version.
     */
    @Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      return instance.getVersionBytes();
    }
    /**
     * <pre>
     * Version of the client app. Use this property to send version with every event.
     * This allows for segmentation based on the app version.
     * Sample values: "1.0.0", "1.0.1".
     * </pre>
     *
     * <code>string version = 1;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(
        String value) {
      copyOnWrite();
      instance.setVersion(value);
      return this;
    }
    /**
     * <pre>
     * Version of the client app. Use this property to send version with every event.
     * This allows for segmentation based on the app version.
     * Sample values: "1.0.0", "1.0.1".
     * </pre>
     *
     * <code>string version = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      copyOnWrite();
      instance.clearVersion();
      return this;
    }
    /**
     * <pre>
     * Version of the client app. Use this property to send version with every event.
     * This allows for segmentation based on the app version.
     * Sample values: "1.0.0", "1.0.1".
     * </pre>
     *
     * <code>string version = 1;</code>
     * @param value The bytes for version to set.
     * @return This builder for chaining.
     */
    public Builder setVersionBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setVersionBytes(value);
      return this;
    }

    /**
     * <pre>
     * Package name of the client app. Use this property to send package name with every event.
     * Sample values: "com.clickstream.app".
     * </pre>
     *
     * <code>string package_name = 2;</code>
     * @return The packageName.
     */
    @Override
    public String getPackageName() {
      return instance.getPackageName();
    }
    /**
     * <pre>
     * Package name of the client app. Use this property to send package name with every event.
     * Sample values: "com.clickstream.app".
     * </pre>
     *
     * <code>string package_name = 2;</code>
     * @return The bytes for packageName.
     */
    @Override
    public com.google.protobuf.ByteString
        getPackageNameBytes() {
      return instance.getPackageNameBytes();
    }
    /**
     * <pre>
     * Package name of the client app. Use this property to send package name with every event.
     * Sample values: "com.clickstream.app".
     * </pre>
     *
     * <code>string package_name = 2;</code>
     * @param value The packageName to set.
     * @return This builder for chaining.
     */
    public Builder setPackageName(
        String value) {
      copyOnWrite();
      instance.setPackageName(value);
      return this;
    }
    /**
     * <pre>
     * Package name of the client app. Use this property to send package name with every event.
     * Sample values: "com.clickstream.app".
     * </pre>
     *
     * <code>string package_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPackageName() {
      copyOnWrite();
      instance.clearPackageName();
      return this;
    }
    /**
     * <pre>
     * Package name of the client app. Use this property to send package name with every event.
     * Sample values: "com.clickstream.app".
     * </pre>
     *
     * <code>string package_name = 2;</code>
     * @param value The bytes for packageName to set.
     * @return This builder for chaining.
     */
    public Builder setPackageNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPackageNameBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:clickstream.proto.App)
  }
  @Override
  @SuppressWarnings({"unchecked", "fallthrough"})
  protected final Object dynamicMethod(
      MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new App();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          Object[] objects = new Object[] {
            "version_",
            "packageName_",
          };
          String info =
              "\u0000\u0002\u0000\u0000\u0001\u0002\u0002\u0000\u0000\u0000\u0001\u0208\u0002\u0208" +
              "";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<App> parser = PARSER;
        if (parser == null) {
          synchronized (App.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<App>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:clickstream.proto.App)
  private static final App DEFAULT_INSTANCE;
  static {
    App defaultInstance = new App();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      App.class, defaultInstance);
  }

  public static App getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<App> PARSER;

  public static com.google.protobuf.Parser<App> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

