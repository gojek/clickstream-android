public abstract interface class clickstream/ClickStream {
	public static final field Companion Lclickstream/ClickStream$Companion;
	public abstract fun trackEvent (Lclickstream/model/CSEvent;Z)V
}

public final class clickstream/ClickStream$Companion {
	public final fun getInstance ()Lclickstream/ClickStream;
	public final fun initialize (Lclickstream/config/CSConfiguration;)V
	public final fun release ()V
}

public final class clickstream/config/CSConfig {
	public fun <init> (Lclickstream/config/CSEventProcessorConfig;Lclickstream/config/CSEventSchedulerConfig;Lclickstream/config/CSNetworkConfig;Lclickstream/health/model/CSHealthEventConfig;)V
	public final fun component1 ()Lclickstream/config/CSEventProcessorConfig;
	public final fun component2 ()Lclickstream/config/CSEventSchedulerConfig;
	public final fun component3 ()Lclickstream/config/CSNetworkConfig;
	public final fun component4 ()Lclickstream/health/model/CSHealthEventConfig;
	public final fun copy (Lclickstream/config/CSEventProcessorConfig;Lclickstream/config/CSEventSchedulerConfig;Lclickstream/config/CSNetworkConfig;Lclickstream/health/model/CSHealthEventConfig;)Lclickstream/config/CSConfig;
	public static synthetic fun copy$default (Lclickstream/config/CSConfig;Lclickstream/config/CSEventProcessorConfig;Lclickstream/config/CSEventSchedulerConfig;Lclickstream/config/CSNetworkConfig;Lclickstream/health/model/CSHealthEventConfig;ILjava/lang/Object;)Lclickstream/config/CSConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getEventProcessorConfiguration ()Lclickstream/config/CSEventProcessorConfig;
	public final fun getEventSchedulerConfig ()Lclickstream/config/CSEventSchedulerConfig;
	public final fun getHealthEventConfig ()Lclickstream/health/model/CSHealthEventConfig;
	public final fun getNetworkConfig ()Lclickstream/config/CSNetworkConfig;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/config/CSConfiguration {
	public synthetic fun <init> (Landroid/content/Context;Lkotlinx/coroutines/CoroutineDispatcher;Lclickstream/api/CSInfo;Lclickstream/config/CSConfig;Lclickstream/logger/CSLogLevel;Lclickstream/health/time/CSEventGeneratedTimestampListener;Lclickstream/connection/CSSocketConnectionListener;Lclickstream/config/CSRemoteConfig;Lclickstream/health/intermediate/CSEventHealthListener;Lclickstream/health/intermediate/CSHealthEventRepository;Lclickstream/health/intermediate/CSHealthEventProcessor;Lclickstream/health/intermediate/CSHealthEventFactory;Lclickstream/lifecycle/CSAppLifeCycle;Ljava/util/List;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class clickstream/config/CSConfiguration$Builder {
	public fun <init> (Landroid/content/Context;Lclickstream/api/CSInfo;Lclickstream/config/CSConfig;Lclickstream/lifecycle/CSAppLifeCycle;)V
	public final fun addEventListener (Lclickstream/listener/CSEventListener;)Lclickstream/config/CSConfiguration$Builder;
	public final fun build ()Lclickstream/config/CSConfiguration;
	public final fun setDispatcher (Lkotlinx/coroutines/CoroutineDispatcher;)Lclickstream/config/CSConfiguration$Builder;
	public final fun setEventGeneratedTimestamp (Lclickstream/health/time/CSEventGeneratedTimestampListener;)Lclickstream/config/CSConfiguration$Builder;
	public final fun setHealthGateway (Lclickstream/health/CSHealthGateway;)Lclickstream/config/CSConfiguration$Builder;
	public final fun setLogLevel (Lclickstream/logger/CSLogLevel;)Lclickstream/config/CSConfiguration$Builder;
	public final fun setRemoteConfig (Lclickstream/config/CSRemoteConfig;)Lclickstream/config/CSConfiguration$Builder;
	public final fun setSocketConnectionListener (Lclickstream/connection/CSSocketConnectionListener;)Lclickstream/config/CSConfiguration$Builder;
}

public final class clickstream/config/CSEventProcessorConfig {
	public static final field Companion Lclickstream/config/CSEventProcessorConfig$Companion;
	public fun <init> (Ljava/util/List;Ljava/util/List;)V
	public fun <init> (Ljava/util/List;Lkotlin/Pair;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Ljava/util/List;Ljava/util/List;)Lclickstream/config/CSEventProcessorConfig;
	public static synthetic fun copy$default (Lclickstream/config/CSEventProcessorConfig;Ljava/util/List;Ljava/util/List;ILjava/lang/Object;)Lclickstream/config/CSEventProcessorConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getInstantEvent ()Ljava/util/List;
	public final fun getInstantEventExpiredInSeconds ()I
	public final fun getRealtimeEvents ()Ljava/util/List;
	public fun hashCode ()I
	public final fun setInstantEventExpiredInSeconds (I)V
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/config/CSEventProcessorConfig$Companion {
	public final fun default ()Lclickstream/config/CSEventProcessorConfig;
}

public final class clickstream/config/CSEventSchedulerConfig {
	public static final field Companion Lclickstream/config/CSEventSchedulerConfig$Companion;
	public fun <init> (IJZJZJZ)V
	public final fun component1 ()I
	public final fun component2 ()J
	public final fun component3 ()Z
	public final fun component4 ()J
	public final fun component5 ()Z
	public final fun component6 ()J
	public final fun component7 ()Z
	public final fun copy (IJZJZJZ)Lclickstream/config/CSEventSchedulerConfig;
	public static synthetic fun copy$default (Lclickstream/config/CSEventSchedulerConfig;IJZJZJZILjava/lang/Object;)Lclickstream/config/CSEventSchedulerConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBackgroundTaskEnabled ()Z
	public final fun getBatchPeriod ()J
	public final fun getConnectionTerminationTimerWaitTimeInMillis ()J
	public final fun getEventsPerBatch ()I
	public final fun getFlushOnBackground ()Z
	public final fun getUtf8ValidatorEnabled ()Z
	public final fun getWorkRequestDelayInHr ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/config/CSEventSchedulerConfig$Companion {
	public final fun default ()Lclickstream/config/CSEventSchedulerConfig;
}

public final class clickstream/config/CSNetworkConfig {
	public static final field Companion Lclickstream/config/CSNetworkConfig$Companion;
	public fun <init> (Ljava/lang/String;JJJJJJIIJLokhttp3/OkHttpClient;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component10 ()J
	public final fun component11 ()Lokhttp3/OkHttpClient;
	public final fun component2 ()J
	public final fun component3 ()J
	public final fun component4 ()J
	public final fun component5 ()J
	public final fun component6 ()J
	public final fun component7 ()J
	public final fun component8 ()I
	public final fun component9 ()I
	public final fun copy (Ljava/lang/String;JJJJJJIIJLokhttp3/OkHttpClient;)Lclickstream/config/CSNetworkConfig;
	public static synthetic fun copy$default (Lclickstream/config/CSNetworkConfig;Ljava/lang/String;JJJJJJIIJLokhttp3/OkHttpClient;ILjava/lang/Object;)Lclickstream/config/CSNetworkConfig;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getConnectTimeout ()J
	public final fun getEndPoint ()Ljava/lang/String;
	public final fun getInitialRetryDurationInMs ()J
	public final fun getMaxConnectionRetryDurationInMs ()J
	public final fun getMaxRequestAckTimeout ()J
	public final fun getMaxRetriesPerBatch ()I
	public final fun getMinBatteryLevel ()I
	public final fun getOkHttpClient ()Lokhttp3/OkHttpClient;
	public final fun getPingInterval ()J
	public final fun getReadTimeout ()J
	public final fun getWriteTimeout ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/config/CSNetworkConfig$Companion {
	public final fun default (Lokhttp3/OkHttpClient;)Lclickstream/config/CSNetworkConfig;
}

public abstract interface class clickstream/config/CSRemoteConfig {
	public abstract fun isForegroundEventFlushEnabled ()Z
}

public final class clickstream/config/NoOpCSRemoteConfig : clickstream/config/CSRemoteConfig {
	public fun <init> ()V
	public fun <init> (Z)V
	public synthetic fun <init> (ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun isForegroundEventFlushEnabled ()Z
}

public final class clickstream/config/timestamp/DefaultCSEventGeneratedTimestampListener : clickstream/health/time/CSEventGeneratedTimestampListener {
	public fun <init> ()V
	public fun now ()J
}

public abstract class clickstream/connection/CSConnectionEvent {
}

public final class clickstream/connection/CSConnectionEvent$OnConnectionClosed : clickstream/connection/CSConnectionEvent {
	public fun <init> (Lclickstream/connection/CSShutdownReason;)V
	public final fun component1 ()Lclickstream/connection/CSShutdownReason;
	public final fun copy (Lclickstream/connection/CSShutdownReason;)Lclickstream/connection/CSConnectionEvent$OnConnectionClosed;
	public static synthetic fun copy$default (Lclickstream/connection/CSConnectionEvent$OnConnectionClosed;Lclickstream/connection/CSShutdownReason;ILjava/lang/Object;)Lclickstream/connection/CSConnectionEvent$OnConnectionClosed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getShutdownReason ()Lclickstream/connection/CSShutdownReason;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/connection/CSConnectionEvent$OnConnectionClosing : clickstream/connection/CSConnectionEvent {
	public fun <init> (Lclickstream/connection/CSShutdownReason;)V
	public final fun component1 ()Lclickstream/connection/CSShutdownReason;
	public final fun copy (Lclickstream/connection/CSShutdownReason;)Lclickstream/connection/CSConnectionEvent$OnConnectionClosing;
	public static synthetic fun copy$default (Lclickstream/connection/CSConnectionEvent$OnConnectionClosing;Lclickstream/connection/CSShutdownReason;ILjava/lang/Object;)Lclickstream/connection/CSConnectionEvent$OnConnectionClosing;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getShutdownReason ()Lclickstream/connection/CSShutdownReason;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/connection/CSConnectionEvent$OnConnectionConnected : clickstream/connection/CSConnectionEvent {
	public static final field INSTANCE Lclickstream/connection/CSConnectionEvent$OnConnectionConnected;
}

public final class clickstream/connection/CSConnectionEvent$OnConnectionConnecting : clickstream/connection/CSConnectionEvent {
	public static final field INSTANCE Lclickstream/connection/CSConnectionEvent$OnConnectionConnecting;
}

public final class clickstream/connection/CSConnectionEvent$OnConnectionFailed : clickstream/connection/CSConnectionEvent {
	public fun <init> (Ljava/lang/Throwable;)V
	public final fun component1 ()Ljava/lang/Throwable;
	public final fun copy (Ljava/lang/Throwable;)Lclickstream/connection/CSConnectionEvent$OnConnectionFailed;
	public static synthetic fun copy$default (Lclickstream/connection/CSConnectionEvent$OnConnectionFailed;Ljava/lang/Throwable;ILjava/lang/Object;)Lclickstream/connection/CSConnectionEvent$OnConnectionFailed;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getThrowable ()Ljava/lang/Throwable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/connection/CSConnectionEvent$OnMessageReceived : clickstream/connection/CSConnectionEvent {
	public fun <init> (Lclickstream/connection/CSMessage;)V
	public final fun component1 ()Lclickstream/connection/CSMessage;
	public final fun copy (Lclickstream/connection/CSMessage;)Lclickstream/connection/CSConnectionEvent$OnMessageReceived;
	public static synthetic fun copy$default (Lclickstream/connection/CSConnectionEvent$OnMessageReceived;Lclickstream/connection/CSMessage;ILjava/lang/Object;)Lclickstream/connection/CSConnectionEvent$OnMessageReceived;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMessage ()Lclickstream/connection/CSMessage;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract class clickstream/connection/CSMessage {
}

public final class clickstream/connection/CSMessage$Bytes : clickstream/connection/CSMessage {
	public fun <init> ([B)V
	public final fun component1 ()[B
	public final fun copy ([B)Lclickstream/connection/CSMessage$Bytes;
	public static synthetic fun copy$default (Lclickstream/connection/CSMessage$Bytes;[BILjava/lang/Object;)Lclickstream/connection/CSMessage$Bytes;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()[B
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/connection/CSMessage$Text : clickstream/connection/CSMessage {
	public fun <init> (Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lclickstream/connection/CSMessage$Text;
	public static synthetic fun copy$default (Lclickstream/connection/CSMessage$Text;Ljava/lang/String;ILjava/lang/Object;)Lclickstream/connection/CSMessage$Text;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/connection/CSShutdownReason {
	public static final field Companion Lclickstream/connection/CSShutdownReason$Companion;
	public static final field GRACEFUL Lclickstream/connection/CSShutdownReason;
	public fun <init> (ILjava/lang/String;)V
	public final fun component1 ()I
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (ILjava/lang/String;)Lclickstream/connection/CSShutdownReason;
	public static synthetic fun copy$default (Lclickstream/connection/CSShutdownReason;ILjava/lang/String;ILjava/lang/Object;)Lclickstream/connection/CSShutdownReason;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCode ()I
	public final fun getReason ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/connection/CSShutdownReason$Companion {
}

public abstract interface class clickstream/connection/CSSocketConnectionListener {
	public abstract fun onEventChanged (Lclickstream/connection/CSConnectionEvent;)V
}

public final class clickstream/extension/CSMessageExtKt {
	public static final fun eventName (Lcom/google/protobuf/MessageLite;)Ljava/lang/String;
	public static final fun getField (Lcom/google/protobuf/MessageLite;Ljava/lang/String;)Ljava/lang/reflect/Field;
	public static final fun isHealthEvent (Lcom/gojek/clickstream/de/Event;)Z
	public static final fun isValidMessage (Lcom/google/protobuf/MessageLite;)Z
	public static final fun messageName (Lcom/google/protobuf/MessageLite;)Ljava/lang/String;
	public static final fun protoName (Lcom/google/protobuf/MessageLite;)Ljava/lang/String;
	public static final fun toFlatMap (Lcom/google/protobuf/MessageLite;)Ljava/util/Map;
}

public final class clickstream/internal/db/CSDatabase_Impl {
	public static final field Companion Lclickstream/internal/db/CSDatabase$Companion;
	public fun <init> ()V
	public fun clearAllTables ()V
	public fun eventDataDao ()Lclickstream/internal/eventscheduler/CSEventDataDao;
}

public final class clickstream/internal/eventprocessor/impl/DefaultCSMetaProvider : clickstream/api/CSMetaProvider {
	public fun <init> (Lclickstream/api/CSInfo;)V
	public fun getApp ()Lcom/gojek/clickstream/internal/HealthMeta$App;
	public fun getCustomer ()Lcom/gojek/clickstream/internal/HealthMeta$Customer;
	public fun getDevice ()Lcom/gojek/clickstream/internal/HealthMeta$Device;
	public fun getSession ()Lcom/gojek/clickstream/internal/HealthMeta$Session;
	public fun location (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class clickstream/internal/eventscheduler/CSEventData {
	public static final field Companion Lclickstream/internal/eventscheduler/CSEventData$Companion;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;JZ[BLjava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()J
	public final fun component4 ()Z
	public final fun component5 ()[B
	public final fun component6 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;JZ[BLjava/lang/String;)Lclickstream/internal/eventscheduler/CSEventData;
	public static synthetic fun copy$default (Lclickstream/internal/eventscheduler/CSEventData;Ljava/lang/String;Ljava/lang/String;JZ[BLjava/lang/String;ILjava/lang/Object;)Lclickstream/internal/eventscheduler/CSEventData;
	public fun equals (Ljava/lang/Object;)Z
	public final fun event ()Lcom/gojek/clickstream/de/Event;
	public final fun getEventGuid ()Ljava/lang/String;
	public final fun getEventRequestGuid ()Ljava/lang/String;
	public final fun getEventTimeStamp ()J
	public final fun getMessageAsBytes ()[B
	public final fun getMessageName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isOnGoing ()Z
	public fun toString ()Ljava/lang/String;
}

public final class clickstream/internal/eventscheduler/CSEventData$Companion {
	public final fun create (Lclickstream/model/CSEvent;)Lkotlin/Pair;
}

public final class clickstream/internal/eventscheduler/CSEventDataDao_Impl : clickstream/internal/eventscheduler/CSEventDataDao {
	public fun <init> (Landroidx/room/RoomDatabase;)V
	public fun deleteByGuId (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun getAll (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insert (Lclickstream/internal/eventscheduler/CSEventData;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun insertAll (Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun loadAll ()Lkotlinx/coroutines/flow/Flow;
	public fun loadEventByRequestId (Ljava/lang/String;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun loadOnGoingEvents (Lkotlin/coroutines/Continuation;)Ljava/lang/Object;
	public fun setOnGoingEvent (Ljava/lang/String;ZLkotlin/coroutines/Continuation;)Ljava/lang/Object;
}

public final class clickstream/model/CSEvent {
	public fun <init> (Ljava/lang/String;Lcom/google/protobuf/Timestamp;Lcom/google/protobuf/MessageLite;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Lcom/google/protobuf/Timestamp;
	public final fun component3 ()Lcom/google/protobuf/MessageLite;
	public final fun copy (Ljava/lang/String;Lcom/google/protobuf/Timestamp;Lcom/google/protobuf/MessageLite;)Lclickstream/model/CSEvent;
	public static synthetic fun copy$default (Lclickstream/model/CSEvent;Ljava/lang/String;Lcom/google/protobuf/Timestamp;Lcom/google/protobuf/MessageLite;ILjava/lang/Object;)Lclickstream/model/CSEvent;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getGuid ()Ljava/lang/String;
	public final fun getMessage ()Lcom/google/protobuf/MessageLite;
	public final fun getTimestamp ()Lcom/google/protobuf/Timestamp;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/gojek/android/clickstream/BuildConfig {
	public static final field BUILD_TYPE Ljava/lang/String;
	public static final field DEBUG Z
	public static final field LIBRARY_PACKAGE_NAME Ljava/lang/String;
	public fun <init> ()V
}

